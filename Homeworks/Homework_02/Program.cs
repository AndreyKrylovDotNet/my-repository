using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Homework_02
{
    class Program
    {
        /// <summary>
        /// Код, который выполняется в первую очередь
        /// </summary>
        /// <param name="args">Параметры запуска</param>
        static void Main(string[] args)

        {
            #region Задание 1. Создание нескольких переменных разных типов, в которых могут храниться данные

            /*      Что нужно сделать:
                Некоторая компания заинтересована в том, чтобы вы создали для неё приложение ― записную книжку. Сейчас в компании работает три сотрудника, 
                именно они и будут пользователями приложения.
                Создайте переменные для этих пользователей. При этом раскрывать свои персональные данные они не захотели и предпочитают вводить их самостоятельно.
                Итого для каждого пользователя должны быть доступны переменные под следующие данные:
                     имя,
                     возраст,
                     рост,
                     баллы по русскому языку,
                     баллы по истории,
                     баллы по математике.
                При решении подумайте, какой тип данных под какую переменную подходит больше всего.
                    Советы и рекомендации:
                Клиент хочет, чтобы сотрудники вводили данные последовательно: сначала первый сотрудник введёт все свои данные, затем второй и, наконец, третий.
                Когда пользователь будет вводить данные, он может сделать ошибку и ввести, например, отрицательный рост или огромный балл по математике. 
                Вам стоит предусмотреть этот момент.
                При возникновении ошибки пользователю наверняка захочется увидеть сообщение о ней, но никак не пустой экран.
                Не используйте в названиях переменных транслит.
                    Что оценивается:
                Должны быть объявлены переменные под данные для трёх сотрудников.
                Переменные должны быть подходящего типа: для баллов по предметам ― целочисленный тип, а для имени пользователя ― строка.
                Должен быть организован ввод данных с клавиатуры. 
            */

            #endregion

            //Выполнение задания 1:

            #region Ввод данных для 1-ого сотрудника

            //заголовок1
            Console.WriteLine("\n   Данные пользователя №_1  \n");

            //ввод имени 1 сотрудника
            Console.Write("Введите имя пользователя №_1: ");
            string nameUser1 = Console.ReadLine();

            //ввод возраста 1 сотрудника
            Console.Write("Введите возраст (от 18 до 120) для пользователя №_1: ");
            byte ageUser1;   //инициализация переменной для значения возраста типа byte
            if (!byte.TryParse(Console.ReadLine(), out ageUser1) || ageUser1 < 18 || ageUser1 > 120)   //условие правильности ввода и преобразования вводимой строки
            {
                Console.WriteLine("Введены некорректные данные!");
            }

            //ввод роста 1 сотрудника
            Console.Write("Введите рост (от 50.0 до 200.0 см) пользователя №1: ");
            double growthUser1;   //инициализация переменной для значения роста типа double
            if (!double.TryParse(Console.ReadLine(), out growthUser1) || growthUser1 < 50.0 || growthUser1 > 200.0)   //условие правильности ввода и преобразования вводимой строки
            {
                Console.WriteLine("Введены некорректные данные!");
            }

            //ввод баллов по русскому языку для 1 сотрудника
            Console.Write("Введите баллы по русскому языку (от 1 до 10) пользователя №_1: ");
            byte russianLanguagePointsUser1;   //инициализация переменной для значения баллов по русскому языку типа byte
            if (!byte.TryParse(Console.ReadLine(), out russianLanguagePointsUser1) || russianLanguagePointsUser1 < 1 || russianLanguagePointsUser1 > 10)   //условие правильности ввода и преобразования вводимой строки
            {
                Console.WriteLine("Введены некорректные данные!");
            }

            //ввод баллов по истории для 1 сотрудника
            Console.Write("Введите баллы по истории (от 1 до 10) пользователя №_1: ");
            byte historyPointsUser1;   //инициализация переменной для значения баллов по истории типа byte
            if (!byte.TryParse(Console.ReadLine(), out historyPointsUser1) || historyPointsUser1 < 1 || historyPointsUser1 > 10)   //условие правильности ввода и преобразования вводимой строки
            {
                Console.WriteLine("Введены некорректные данные!");
            }

            //ввод баллов по математике для 1 сотрудника
            Console.Write("Введите баллы по математике (от 1 до 10) пользователя №_1: ");
            byte mathScoresUser1;   //инициализация переменной для значения баллов по математике типа byte
            if (!byte.TryParse(Console.ReadLine(), out mathScoresUser1) || mathScoresUser1 < 1 || mathScoresUser1 > 10)   //условие правильности ввода и преобразования вводимой строки
            {
                Console.WriteLine("Введены некорректные данные!");
            }
            #endregion


            #region Ввод данных для 2-ого сотрудника

            //заголовок2  
            Console.WriteLine("\n   Данные пользователя №_2  \n");

            //ввод имени 2 сотрудника
            Console.Write("Введите имя пользователя №_2: ");
            string nameUser2 = Console.ReadLine();

            //ввод возраста 2 сотрудника
            Console.Write("Введите возраст (от 18 до 120) для пользователя №_2: ");
            byte ageUser2;   //инициализация переменной для значения возраста типа byte
            if (!byte.TryParse(Console.ReadLine(), out ageUser2) || ageUser2 < 18 || ageUser2 > 120)   //условие правильности ввода и преобразования вводимой строки
            {
                Console.WriteLine("Введены некорректные данные!");
            }

            //ввод роста 2 сотрудника
            Console.Write("Введите рост (от 50.0 до 200.0 см) пользователя №2: ");
            double growthUser2;   //инициализация переменной для значения роста типа double
            if (!double.TryParse(Console.ReadLine(), out growthUser2) || growthUser2 < 50.0 || growthUser2 > 200.0)   //условие правильности ввода и преобразования вводимой строки
            {
                Console.WriteLine("Введены некорректные данные!");
            }

            //ввод баллов по русскому языку для 2 сотрудника
            Console.Write("Введите баллы по русскому языку (от 1 до 10) пользователя №_2: ");
            byte russianLanguagePointsUser2;   //инициализация переменной для значения баллов по русскому языку типа byte
            if (!byte.TryParse(Console.ReadLine(), out russianLanguagePointsUser2) || russianLanguagePointsUser2 < 1 || russianLanguagePointsUser2 > 10)   //условие правильности ввода и преобразования вводимой строки
            {
                Console.WriteLine("Введены некорректные данные!");
            }

            //ввод баллов по истории для 2 сотрудника
            Console.Write("Введите баллы по истории (от 1 до 10) пользователя №_2: ");
            byte historyPointsUser2;   //инициализация переменной для значения баллов по истории типа byte
            if (!byte.TryParse(Console.ReadLine(), out historyPointsUser2) || historyPointsUser2 < 1 || historyPointsUser2 > 10)   //условие правильности ввода и преобразования вводимой строки
            {
                Console.WriteLine("Введены некорректные данные!");
            }

            //ввод баллов по математике для 2 сотрудника
            Console.Write("Введите баллы по математике (от 1 до 10) пользователя №_2: ");
            byte mathScoresUser2;   //инициализация переменной для значения баллов по математике типа byte
            if (!byte.TryParse(Console.ReadLine(), out mathScoresUser2) || mathScoresUser2 < 1 || mathScoresUser2 > 10)   //условие правильности ввода и преобразования вводимой строки
            {
                Console.WriteLine("Введены некорректные данные!");
            }
            #endregion


            #region Ввод данных для 3-его сотрудника

            //заголовок3 
            Console.WriteLine("\n   Данные пользователя №_3 \n");

            //ввод имени 3 сотрудника
            Console.Write("Введите имя пользователя №_3: ");
            string nameUser3 = Console.ReadLine();

            //ввод возраста 3 сотрудника
            Console.Write("Введите возраст (от 18 до 120) для пользователя №_3: ");
            byte ageUser3;   //инициализация переменной для значения возраста типа byte
            if (!byte.TryParse(Console.ReadLine(), out ageUser3) || ageUser3 < 18 || ageUser3 > 120)   //условие правильности ввода и преобразования вводимой строки
            {
                Console.WriteLine("Введены некорректные данные!");
            }

            //ввод роста 3 сотрудника
            Console.Write("Введите рост (от 50.0 до 200.0 см) пользователя №3: ");
            double growthUser3;   //инициализация переменной для значения роста типа double
            if (!double.TryParse(Console.ReadLine(), out growthUser3) || growthUser3 < 50.0 || growthUser3 > 200.0)   //условие правильности ввода и преобразования вводимой строки
            {
                Console.WriteLine("Введены некорректные данные!");
            }

            //ввод баллов по русскому языку для 3 сотрудника
            Console.Write("Введите баллы по русскому языку (от 1 до 10) пользователя №_3: ");
            byte russianLanguagePointsUser3;   //инициализация переменной для значения баллов по русскому языку типа byte
            if (!byte.TryParse(Console.ReadLine(), out russianLanguagePointsUser3) || russianLanguagePointsUser3 < 1 || russianLanguagePointsUser3 > 10)   //условие правильности ввода и преобразования вводимой строки
            {
                Console.WriteLine("Введены некорректные данные!");
            }

            //ввод баллов по истории для 3 сотрудника
            Console.Write("Введите баллы по истории (от 1 до 10) пользователя №_3: ");
            byte historyPointsUser3;   //инициализация переменной для значения баллов по истории типа byte
            if (!byte.TryParse(Console.ReadLine(), out historyPointsUser3) || historyPointsUser3 < 1 || historyPointsUser3 > 10)   //условие правильности ввода и преобразования вводимой строки
            {
                Console.WriteLine("Введены некорректные данные!");
            }

            //ввод баллов по математике для 3 сотрудника
            Console.Write("Введите баллы по математике (от 1 до 10) пользователя №_3: ");
            byte mathScoresUser3;   //инициализация переменной для значения баллов по математике типа byte
            if (!byte.TryParse(Console.ReadLine(), out mathScoresUser3) || mathScoresUser3 < 1 || mathScoresUser3 > 10)   //условие правильности ввода и преобразования вводимой строки
            {
                Console.WriteLine("Введены некорректные данные!");
            }
            #endregion

            Console.WriteLine("\n   Ввод данных завершён!\n");   //вывод сообщения о завершении ввода данных для всех сотрудников

            Console.WriteLine("Нажмите любую клавишу для вывода на экран полной информации!");

            Console.ReadKey();   //delay
            Console.Clear();   //очистка экрана консоли

            #region Задание 2. Реализация в системе автоматического подсчёта среднего балла по трём предметам, указанным в пункте 1
            /*       
                    Что нужно сделать:
                Сотрудникам необходимо получить свой средний балл по трём предметам, однако самостоятельно рассчитывать его они не хотят. 
                Ваша задача ― автоматизировать этот процесс. Для этого:
                    создайте переменную под средний балл для каждого сотрудника,
                    рассчитайте среднее арифметическое баллов для каждого сотрудника,
                    выведите средний балл на экран.
                    Советы и рекомендации:
                При выводе среднего балла стоит округлить его до двух знаков после запятой.
                Не стоит выводить средний балл как отдельно стоящее число. Вам следует добавить подсказку пользователю, 
                что именно это число является средним баллом и никакое другое. 
                Если для баллов вы использовали целочисленный тип, возможно, вам понадобится преобразование типов, 
                так как результат целочисленного деления ― целочисленный, а средний балл может быть со знаком.
                    Что оценивается:
                Для каждого пользователя должен быть рассчитан средний балл.
                Каждый средний балл должен быть выведен на экран. 
            */
            #endregion

            //Выполнение задания 2:

            double averageMarkUser1;
            averageMarkUser1 = ((double)(russianLanguagePointsUser1 + historyPointsUser1 + mathScoresUser1)) / 3;   //расчёт среднего балла по 3-м предметам для сотрудника 1
            Console.WriteLine("Средний балл по предметам для сотрудника 1 равен: {0:0.00}", averageMarkUser1);

            double averageMarkUser2;
            averageMarkUser2 = ((double)(russianLanguagePointsUser2 + historyPointsUser2 + mathScoresUser2)) / 3;   //расчёт среднего балла по 3-м предметам для сотрудника 2
            Console.WriteLine("Средний балл по предметам для сотрудника 2 равен: {0:0.00}", averageMarkUser2);

            double averageMarkUser3;
            averageMarkUser3 = ((double)(russianLanguagePointsUser3 + historyPointsUser3 + mathScoresUser3)) / 3;   //расчёт среднего балла по 3-м предметам для сотрудника 3
            Console.WriteLine("Средний балл по предметам для сотрудника 3 равен: {0:0.00}", averageMarkUser3);



            #region Задание 3. Реализация возможности вывода информации на консоли
            /*
                    Что нужно сделать:
                Каждый сотрудник компании высказал свои личные пожелания к тому, как должен быть осуществлён вывод информации о нём.
                    Первый сотрудник предпочитает самый простой метод вывода ― обычный вывод.
                    Второй сотрудник хотел бы, чтобы вы использовали форматированный вывод.
                    Третий сотрудник, указал, что обязательным пунктом является использование интерполяции строк.
                Реализуйте возможность вывода информации из консоли, учитывая пожелания сотрудников:
                    при помощи обычного вывода,
                    при помощи форматированного вывода,
                    используя интерполяцию строк.
                    Что оценивается:
                В задании должен быть реализован обычный вывод.
                В задании должен быть реализован форматированный вывод.
                В задании должен быть реализован вывод с использованием интерполяции строк.
            */
            #endregion

            //Выполнение задания 3:

            Console.WriteLine("\n   Вывод данных пользователя №_1:  \n");   //обычный вывод
            Console.WriteLine("Имя: " + nameUser1 +
                              "\nВозраст: " + ageUser1 +
                              "\nРост: " + growthUser1 +
                              "\nБалл по русскому языку: " + russianLanguagePointsUser1 +
                              "\nБалл по истории: " + historyPointsUser1 +
                              "\nБалл по математике: " + mathScoresUser1);

            Console.WriteLine("\n   Вывод данных пользователя №_2:  \n");   //форматированный вывод
            Console.WriteLine("Имя: {0} \nВозраст: {1} \nРост: {2} \nБалл по русскому языку: {3} \nБалл по истории: {4} \nБалл по математике: {5}",
                  nameUser2,
                  ageUser2,
                  growthUser2,
                  russianLanguagePointsUser2,
                  historyPointsUser2,
                  mathScoresUser2);

            Console.WriteLine("\n   Вывод данных пользователя №_3:  \n");   //вывод методом интерполяции строк
            Console.WriteLine($"Имя: {nameUser3} " +
                              $"\nВозраст: {ageUser3} " +
                              $"\nРост: {growthUser3} " +
                              $"\nБалл по русскому языку: {russianLanguagePointsUser3} " +
                              $"\nБалл по истории: {historyPointsUser3} " +
                              $"\nБалл по математике: {mathScoresUser3}");



            #region Задание 4. Комментирование кода с использованием обычных или XML-комментариев
            /*
                    Что нужно сделать:
                Для того чтобы обеспечить читабельность кода, используйте следующие типы комментариев:
                    обычные комментарии,
                    многострочные комментарии,
                    XML-комментарии.
                    Советы и рекомендации:
                Комментарии — это полезный инструмент, однако ваши переменные должны быть названы так, чтобы их назначение было понятно и без подсказок.
                    Что оценивается:
                В коде задания должны быть использованы комментарии.
            */
            #endregion

            //Выполнение задания 4: 
            //по ходу выполнения всего домашнего задания

            #region Задание 5. Реализация возможности вывода данных в центре консоли
            /*
                    Что нужно сделать:
                Реализуйте вывод данных в центре консоли. Заказчик уточнил, что вы получите дополнительный перевод в 150$, если вам это удастся.
                    Советы и рекомендации:
                Убедитесь, что ваш вывод расположен по центру, а не начинается с него. Для этого вам необходимо использовать длину выводимой строки.
                Длину любой строки можно узнать с помощью свойства Length.
                    Что оценивается:
                Одна или несколько строк должны быть выведены по центру.
            */
            #endregion

            //Выполнение задания 5:

            Console.Write("\nВведите данные для вывода их в центре консоли: ");   //вывод текстового сообщения

            string centerText = (Console.ReadLine());   //инициализация переменной для считываемой строки символов

            Console.Clear();   //очистка экрана консоли

            int centerX = (Console.WindowWidth / 2) - (centerText.Length / 2);   //инициализация переменной для координаты консоли X (относительно ширины окна консоли и длины текста)
            int centerY = (Console.WindowHeight / 2);                            //инициализация переменной для координаты консоли Y (относительно высоты консоли)

            Console.SetCursorPosition(centerX, centerY);   //определение положения координат курсора

            Console.ForegroundColor = ConsoleColor.Green;   //установка другого цвета симолов в консоли из перечисления ConsoleColor

            Console.Write(centerText);   //вывод текста без перехода на новую строку           


            Console.ReadKey();   //delay

        }
    }
}
